INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/src/lib/consensus/clone")
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/src/lib/consensus/common")

FILE(GLOB_RECURSE consensus_SOURCES "*.cpp")

IF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    # endian.h provide by Linux ,also byteswap.h; =1 means do not compling myself
    ADD_DEFINITIONS(-DHAVE_ENDIAN_H -DHAVE_BYTESWAP_H
    -DHAVE_DECL_BSWAP_16=1 -DHAVE_DECL_BSWAP_32=1 -DHAVE_DECL_BSWAP_64=1
	-DHAVE_DECL_LE16TOH=1  -DHAVE_DECL_LE32TOH=1 -DHAVE_DECL_LE64TOH=1  
	-DHAVE_DECL_HTOLE16=1 -DHAVE_DECL_HTOLE32=1 -DHAVE_DECL_HTOLE64=1 
	-DHAVE_DECL_BE16TOH=1  -DHAVE_DECL_BE32TOH=1 -DHAVE_DECL_BE64TOH=1  
	-DHAVE_DECL_HTOBE16=1 -DHAVE_DECL_HTOBE32=1 -DHAVE_DECL_HTOBE64=1)
ELSEIF("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")
    # endian.h no provide by OSX, no byteswap.h
    ADD_DEFINITIONS(
    -DHAVE_DECL_BSWAP_16=0 -DHAVE_DECL_BSWAP_32=0 -DHAVE_DECL_BSWAP_64=0
	-DHAVE_DECL_LE16TOH=0  -DHAVE_DECL_LE32TOH=0 -DHAVE_DECL_LE64TOH=0  
	-DHAVE_DECL_HTOLE16=0 -DHAVE_DECL_HTOLE32=0 -DHAVE_DECL_HTOLE64=0 
	-DHAVE_DECL_BE16TOH=0  -DHAVE_DECL_BE32TOH=0 -DHAVE_DECL_BE64TOH=0  
	-DHAVE_DECL_HTOBE16=0 -DHAVE_DECL_HTOBE32=0 -DHAVE_DECL_HTOBE64=0)
ENDIF()

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fno-strict-aliasing ")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-strict-aliasing -fpermissive")

ADD_DEFINITIONS(-DBCK_STATIC=1)
ADD_LIBRARY(consensus_static STATIC ${consensus_SOURCES})
SET_TARGET_PROPERTIES(consensus_static PROPERTIES OUTPUT_NAME mvs_consensus)
TARGET_LINK_LIBRARIES(consensus_static ${Boost_LIBRARIES} )
TARGET_LINK_LIBRARIES(consensus_static ethash )
INSTALL(TARGETS consensus_static DESTINATION lib)

IF(ENABLE_SHARED_LIBS)
    ADD_DEFINITIONS(-DBCK_DLL=1)
  ADD_LIBRARY(consensus_shared SHARED ${consensus_SOURCES})
  SET_TARGET_PROPERTIES(consensus_shared PROPERTIES OUTPUT_NAME mvs_consensus)
  TARGET_LINK_LIBRARIES(consensus_shared ${Boost_LIBRARIES})
  TARGET_LINK_LIBRARIES(consensus_shared  ethash )
  INSTALL(TARGETS consensus_shared DESTINATION lib)
ENDIF()
